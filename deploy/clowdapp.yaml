---
apiVersion: v1
kind: Template
metadata:
  name: dvo-extractor
objects:


- kind: HorizontalPodAutoscaler
  apiVersion: autoscaling/v1
  metadata:
    labels:
      app: ccx-data-pipeline
    name: dvo-extractor
  spec:
    minReplicas: ${{MIN_REPLICAS}}
    maxReplicas: ${{MAX_REPLICAS}}
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: dvo-extractor-instance
    targetCPUUtilizationPercentage: 50

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: dvo-extractor
  spec:
    envName: ${ENV_NAME}
    testing:
      iqePlugin: ccx
    deployments:
      - name: instance
        minReplicas: ${{MIN_REPLICAS}}
        webServices:
          public:
            enabled: false
          private:
            enabled: false
          metrics:
            enabled: true
        podSpec:
          env:
            - name: CONFIG_PATH
              value: /data/config.yaml
            - name: CLOWDER_ENABLED
              value: ${CLOWDER_ENABLED}
            - name: CDP_GROUP_ID
              value: ${CDP_GROUP_ID}
            - name: CDP_PLATFORM_SERVICE
              value: ${CDP_PLATFORM_SERVICE}
            - name: CDP_CONSUMER_SERVER
              value: ${CDP_CONSUMER_SERVER}
            - name: CDP_PUBLISHER_SERVER
              value: ${CDP_PUBLISHER_SERVER}
            - name: SENTRY_DSN
              # TODO: CCXDEV-11596
              valueFrom:
                secretKeyRef:
                  key: dsn
                  name: dvo-extractor-dsn
                  optional: true
            - name: SENTRY_ENVIRONMENT
              value: ${ENV_NAME}
            - name: LOGGING_TO_CW_ENABLED
              value: "True"
            - name: CW_STREAM_NAME
              value: ${CSE_LOG_STREAM}
            - name: AWS_REGION_NAME
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_region
                  optional: true
            - name: CW_LOG_GROUP
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: log_group_name
                  optional: true
            - name: CW_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_access_key_id
                  optional: true
            - name: CW_AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: cloudwatch
                  key: aws_secret_access_key
                  optional: true
          image: ${IMAGE}:${IMAGE_TAG}
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 20
            successThreshold: 1
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 20
            successThreshold: 1
            failureThreshold: 1
            periodSeconds: 10
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /metrics
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 20
            successThreshold: 1
            # Wait for 10x10 seconds
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /data
              name: dvo-extractor-config
          volumes:
            - configMap:
                name: dvo-extractor-config-map
              name: dvo-extractor-config
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 512Mi

    kafkaTopics:
      - replicas: 16
        partitions: 3
        topicName: ${CDP_INCOMING_TOPIC}
      - replicas: 1
        partitions: 1
        topicName: ${CDP_DEAD_LETTER_QUEUE_TOPIC}
      - replicas: 3
        partitions: 1
        topicName: ${CDP_OUTGOING_TOPIC}
      - replicas: 3
        partitions: 1
        topicName: ${PAYLOAD_TRACKER_TOPIC}

- kind: ConfigMap
  apiVersion: v1
  metadata:
    labels:
      app: dvo-extractor
    name: dvo-extractor-config-map
  data:
    config.yaml: |-
      plugins:
        packages:
          - ccx_rules_ocp.external.dvo
          - dvo_extractor
          - insights.specs.default
          - pythonjsonlogger
          - pythonjsonlogger.jsonlogger
      service:
        extract_timeout:
        extract_tmp_dir:
        format: insights.formats._json.JsonFormat
        target_components: []
        consumer:
          name: ccx_messaging.consumers.kafka_consumer.KafkaConsumer
          kwargs:
            incoming_topic: ${CDP_INCOMING_TOPIC}
            platform_service: ${CDP_PLATFORM_SERVICE}
            group.id: ${CDP_GROUP_ID}
            bootstrap.servers: ${CDP_CONSUMER_SERVER}
            processing_timeout_s: 0
            max.poll.interval.ms: 600000
            heartbeat.interval.ms: 10000
            session.timeout.ms: 20000
            dead_letter_queue_topic: ${CDP_DEAD_LETTER_QUEUE_TOPIC}
        downloader:
          name: ccx_messaging.downloaders.http_downloader.HTTPDownloader
          kwargs:
            max_archive_size: 100MiB
        publisher:
          name: ccx_messaging.publishers.dvo_metrics_publisher.DVOMetricsPublisher
          kwargs:
            outgoing_topic: ${CDP_OUTGOING_TOPIC}
            bootstrap.servers: ${CDP_PUBLISHER_SERVER}
            compression: gzip

        watchers:
          - name: ccx_messaging.watchers.stats_watcher.StatsWatcher
          - name: ccx_messaging.watchers.cluster_id_watcher.ClusterIdWatcher
          - name: ccx_messaging.watchers.payload_tracker_watcher.PayloadTrackerWatcher
            kwargs:
              bootstrap.servers: $KAFKA_BOOTSTRAP_URL
              topic: ${PAYLOAD_TRACKER_TOPIC}
              service_name: dvo-extractor

        logging:
          version: 1
          disable_existing_loggers: false
          handlers:
            default:
              level: DEBUG
              class: logging.StreamHandler
              stream: ext://sys.stdout
              formatter: json
          formatters:
            brief:
              format: "%(message)s"
            json:
              (): "pythonjsonlogger.jsonlogger.JsonFormatter"
              format: "%(filename)s %(lineno)d %(process)d %(levelname)s %(asctime)s %(name)s %(message)s"
            cloudwatch:
              format: "%(filename)s %(levelname)s %(asctime)s %(name)s %(hostname)s %(mac_address)s %(message)s"
          root:
            handlers:
              - default
          loggers:
            insights_messaging:
              level: DEBUG
            ccx_messaging:
              level: DEBUG
            insights:
              level: WARNING
            dvo_extractor:
              level: DEBUG

- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "8000"
      prometheus.io/scheme: http
      prometheus.io/scrape: "true"
    name: dvo-extractor-prometheus-exporter
    labels:
      app: dvo-extractor
  spec:
    ports:
      - name: dvo-extractor-port-metrics
        port: 8000
        protocol: TCP
        targetPort: 8000
    selector:
      app: dvo-extractor

parameters:
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/dvo-extractor
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: "true"
- description: ClowdEnv Name
  name: ENV_NAME
  required: true
- description: Minimum number of pods to use when autoscaling is enabled
  name: MIN_REPLICAS
  value: '1'
- description: Minimum number of pods to use when autoscaling is enabled
  name: MAX_REPLICAS
  value: '1'

- name: CDP_INCOMING_TOPIC
  value: platform.upload.announce
  required: true
- name: CDP_OUTGOING_TOPIC
  value: ccx.dvo.results
  required: true
- name: CDP_DEAD_LETTER_QUEUE_TOPIC
  value: ccx.dvo.extractor.dead.letter.queue
  required: true
- name: PAYLOAD_TRACKER_TOPIC
  value: platform.payload-status
  required: true
- name: CDP_GROUP_ID
  value: dvo_extractor_app
  required: true
- name: CDP_CONSUMER_SERVER
  value: mq-kafka:29092
  required: true
- description: Service name for filtering received Kafka message from announce topic
  name: CDP_PLATFORM_SERVICE
  required: true
  value: openshift
- name: CDP_PUBLISHER_SERVER
  value: mq-kafka:29092
  required: true

- name: CLOUDWATCH_DEBUG
  value: "false"
  required: true
- name: CSE_LOG_STREAM
  value: "dvo-extractor"
